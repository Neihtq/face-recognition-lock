# -*- coding: utf-8 -*-
"""YOLO face detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mWVkEdflFA05_Om9NvETskdVtufG9FvS
"""

import numpy as np
import time
import cv2
import os

CONFIDENCE = 0.5
THRESHOLD = 0.3

net = cv2.dnn.readNetFromDarknet("yolov3-face.cfg", "yolov3-wider_16000.weights")



ln = net.getLayerNames()
ln = [ln[i[0] - 1] for i in net.getUnconnectedOutLayers()]

cap = cv2.VideoCapture(0)
frame_id = 0

while True:
  _, frame = cap.read()
  frame_id += 1
  (H, W) = frame.shape[:2]

  blob = cv2.dnn.blobFromImage(frame, 1 / 255.0, (416, 416), swapRB=True, crop=False)
  net.setInput(blob)
  layerOutputs = net.forward(ln)

  boxes = []
  confidences = []
  classIDs = []

  for output in layerOutputs:
    for detection in output:
      scores = detection[5:]
      classID = np.argmax(scores)
      confidence = scores[classID]

      if confidence > CONFIDENCE:
        box = detection[0:4] * np.array([W, H, W, H])
        (center_x, center_y, width, height) = box.astype("int")

        x = int(center_x - (width / 2))
        y = int(center_y - (height / 2))

        boxes.append([x, y, int(width), int(height)])
        confidences.append(float(confidence))
        classIDs.append(classID)

    idxs = cv2.dnn.NMSBoxes(boxes, confidences, CONFIDENCE, THRESHOLD)

    if len(idxs) > 0:
      for i in idxs.flatten():
        (x , y) = (boxes[i][0], boxes[i][1])
        (w, h) = (boxes[i][2], boxes[i][3])
        cv2.rectangle(frame, (x, y), (x + w, y + h), (255,0,0), 2)
    
      crop_frame = frame[y:y+h, x:x+w]

    cv2.imshow("Cam", frame)    
    key = cv2.waitKey(1)
    
    if key == 27:
      break

cap.release()
cv2.destroyAllWindows()

